{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","actions/itemActions.js","components/EditModal.js","components/ShoppingList.js","components/ItemModal.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","type","payload","id","arguments","length","undefined","clearErrors","tokenConfig","getState","token","auth","config","headers","Content-type","setItemsLoading","EditModal","state","modal","name","toggle","_this","setState","onChange","e","Object","defineProperty","target","value","onSubmit","preventDefault","editedItem","props","editItem","react_default","a","createElement","Button","color","style","marginBottom","onClick","this","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","placeholder","marginTop","block","Component","connect","item","dispatch","axios","put","concat","then","res","data","catch","err","response","ShoppingList","onDeleteClick","deleteItem","like","postId","actions","console","log","getItems","_this2","items","_this$props$auth","isAuthenticated","user","Container","ListGroup","react_transition_group","className","map","_ref","_id","key","timeout","classNames","ListGroupItem","components_EditModal","size","bind","disabled","get","delete","likeItem","userId","ItemModal","newItem","addItem","post","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","objectSpread","filter","toConsumableArray","error","setItem","removeItem","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","RegisterModal","email","password","_this$state","newUser","register","prevProps","_this$props","NavLink","href","Alert","body","JSON","stringify","Content-Type","LoginModal","login","_ref2","Logout","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","react","logout","AppNavbar","authLinks","NavItem","auth_Logout","guestLinks","auth_RegisterModal","auth_LoginModal","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","App","components_AppNavbar","components_ItemModal","components_ShoppingList","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83e5de64.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const GET_ITEMS = \"GET_ITEMS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const ITEMS_EDIT = \"ITEMS_EDIT\";\nexport const LIKE = \"LIKE\";\n","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./types\";\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\"/api/auth/user\", tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n// Register User\nexport const register = ({ name, email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"/api/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n","import axios from \"axios\";\nimport {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n  ITEMS_EDIT,\n  LIKE\n} from \"./types\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\n\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"/api/items\")\n    .then(res =>\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const addItem = item => (dispatch, getState) => {\n  axios\n    .post(\"/api/items\", item, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const deleteItem = id => (dispatch, getState) => {\n  axios\n    .delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_ITEM,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const editItem = (id, name) => (dispatch, getState) => {\n  axios\n    .put(`/api/items/${id}`, name, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: ITEMS_EDIT,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const likeItem = (postId, userId) => (dispatch, getState) => {\n  console.log();\n};\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { editItem } from '../actions/itemActions';\n\nclass EditModal extends Component {\n  state = {\n    modal: false,\n    name: ''\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n\n\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const editedItem = {\n      id:this.props.id,\n      name: this.state.name\n    };\n\n    // Add item via addItem action\n    this.props.editItem(editedItem.id,editedItem);\n\n    // Close modal\n    this.toggle();\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Button\n          color=\"dark\"\n          style={{ marginBottom: '2rem' }}\n          onClick={this.toggle}\n        >\n          edit \n        </Button>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}> Edit this item   </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"item\">Item</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"item\"\n                  placeholder=\"Edit item\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: '2rem' }} block                    \n>\n                  Edit Item\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(\n  mapStateToProps,\n  { editItem }\n)(EditModal);","import React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getItems, deleteItem, likeItem } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\nimport EditModal from \"./EditModal\";\nclass ShoppingList extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n  };\n  like = (postId, actions) => {\n    console.log(actions);\n  };\n  render() {\n    const { items } = this.props.item;\n    const { isAuthenticated, user } = this.props.auth;\n\n    return (\n      <Container>\n        <ListGroup>\n          <TransitionGroup className=\"shopping-list\">\n            {items.map(({ _id, name }) => (\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  <EditModal id={_id} />\n\n                  <Button\n                    className=\"remove-btn\"\n                    color=\"danger\"\n                    size=\"sm\"\n                    onClick={this.onDeleteClick.bind(this, _id)}\n                  >\n                    &times;\n                  </Button>\n\n                  {isAuthenticated ? (\n                    <Button\n                      className=\"like-btn\"\n                      color=\"primary\"\n                      size=\"sm\"\n                      // onClick={this.like.bind(this, _id)}\n                    >\n                      like\n                    </Button>\n                  ) : (\n                    <Button\n                      className=\"like-btn\"\n                      color=\"primary\"\n                      size=\"sm\"\n                      disabled\n                    >\n                      like\n                    </Button>\n                  )}\n\n                  {name}\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { getItems, deleteItem, likeItem }\n)(ShoppingList);\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../actions/itemActions';\n\nclass ItemModal extends Component {\n  state = {\n    modal: false,\n    name: ''\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newItem = {\n      name: this.state.name\n    };\n\n    // Add item via addItem action\n    this.props.addItem(newItem);\n\n    // Close modal\n    this.toggle();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          color=\"dark\"\n          style={{ marginBottom: '2rem' }}\n          onClick={this.toggle}\n        >\n          Add Item\n        </Button>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"item\">Item</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"item\"\n                  placeholder=\"Add shopping item\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                  Add Item\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(\n  mapStateToProps,\n  { addItem }\n)(ItemModal);","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n  ITEMS_EDIT,\n  LIKE\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      };\n\n    case ITEMS_EDIT:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case LIKE:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport itemReducer from \"./itemReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({\n  item: itemReducer,\n  error: errorReducer,\n  auth: authReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, initialState, composeEnhancers(\n  applyMiddleware(...middleWare)\n));\n\nexport default store;","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\nclass RegisterModal extends Component {\n  state = {\n    modal: false,\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Name\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Register\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors }\n)(RegisterModal);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\nclass LoginModal extends Component {\n  state = {\n    modal: false,\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    };\n\n    // Attempt to login\n    this.props.login(user);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Login\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Login\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, clearErrors }\n)(LoginModal);\n","import React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\n\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <NavLink onClick={this.props.logout} href=\"#\">\n          Logout\n        </NavLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegisterModal from \"./auth/RegisterModal\";\nimport LoginModal from \"./auth/LoginModal\";\nimport Logout from \"./auth/Logout\";\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <Fragment>\n        <NavItem>\n          <span className=\"navbar-text mr-3\">\n            <strong>{user ? `Welcome ${user.name}` : \"\"}</strong>\n          </span>\n        </NavItem>\n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">ShoppingList</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                {isAuthenticated ? authLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AppNavbar);\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport ShoppingList from \"./components/ShoppingList\";\nimport ItemModal from \"./components/ItemModal\";\nimport { Container } from \"reactstrap\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/authActions\";\n\nimport \"./App.css\";\nimport AppNavbar from \"./components/AppNavbar\";\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <AppNavbar />\n        <Container>\n          <ItemModal />\n          <ShoppingList />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n\n<App />\n</Provider>\n\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}